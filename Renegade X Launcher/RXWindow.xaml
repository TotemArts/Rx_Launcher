<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mui="clr-namespace:FirstFloor.ModernUI;assembly=FirstFloor.ModernUI"
                    xmlns:muicontrols="clr-namespace:FirstFloor.ModernUI.Windows.Controls;assembly=FirstFloor.ModernUI"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:LauncherTwo">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml" />
        <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/ModernWindowEx.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="TitleBarButtonGrid" TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>
    <Style x:Key="TitleBarButtonPath" TargetType="{x:Type Path}">
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
    </Style>
    <Style x:Key="MinimizeTitleBarButton" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button
                        Style="{StaticResource SystemButton}"
                        Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}"
                        ToolTip="{x:Static mui:Resources.Minimize}">
                        <Grid Style="{StaticResource TitleBarButtonGrid}">
                            <Path
                                Style="{StaticResource TitleBarButtonPath}"
                                Data="M0,8 L8,8"
                                StrokeThickness="2"
                                />
                        </Grid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RestoreTitleBarButton" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button
                        Style="{StaticResource SystemButton}"
                        Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}"
                        ToolTip="{x:Static mui:Resources.Restore}">
                        <Grid Style="{StaticResource TitleBarButtonGrid}">
                            <Path
                                Style="{StaticResource TitleBarButtonPath}"
                                Data="M2,0.5 L8.5,0.5 L8.5,7 M0.5,3.5 L6.5,3.5 M0.5,2.5 L6.5,2.5 L6.5,8.5 L0.5,8.5 Z"
                                StrokeThickness="1"
                                />
                        </Grid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MaximizeTitleBarButton" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button
                        Style="{StaticResource SystemButton}"
                        Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}"
                        ToolTip="{x:Static mui:Resources.Maximize}">
                        <Grid Style="{StaticResource TitleBarButtonGrid}">
                            <Path
                                Style="{StaticResource TitleBarButtonPath}"
                                Data="M0,2 L9,2 L9,9 L0,9 Z"
                                StrokeThickness="2"
                                />
                        </Grid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseTitleBarButton" TargetType="UserControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Button
                        Style="{StaticResource SystemCloseButton}"
                        Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"
                        ToolTip="{x:Static mui:Resources.Close}">
                        <Grid Style="{StaticResource TitleBarButtonGrid}">
                            <Path
                                Style="{StaticResource TitleBarButtonPath}"
                                Data="M0,0 L8,7 M8,0 L0,7"
                                Width="8" Height="7"
                                StrokeThickness="1.5"
                                />
                        </Grid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:RxWindow">
        <Style.Resources>
            <GridLengthConverter x:Key="glc" />
            <GridLength x:Key="CaptionHeightGridLength">24</GridLength>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="WindowState" Value="Normal">
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" CaptionHeight="0" ResizeBorderThickness="6"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Padding" Value="8" />
        <Setter Property="IsTitleVisible" Value="True" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" NonClientFrameEdges="None" CaptionHeight="0" ResizeBorderThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muicontrols:ModernWindow">
                    <ControlTemplate.Resources>
                        <Style x:Key="ModernWindowTitle" TargetType="TextBlock">
                            <Setter Property="FontSize" Value="10"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="TextWrapping" Value="NoWrap" />
                            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                            <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                        </Style>
                        <Color x:Key="WindowBackgroundColor">#FF12171A</Color>
                    </ControlTemplate.Resources>
                    <Border x:Name="WindowBorder" Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                        <Border.Background>
                            <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}" />
                        </Border.Background>
                        <Border.Resources>
                            <Storyboard x:Key="BackgroundAnimation">
                                <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color" To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6" />
                            </Storyboard>
                        </Border.Resources>

                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <AdornerDecorator>
                                <Grid x:Name="LayoutRoot">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{DynamicResource CaptionHeightGridLength}"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <!-- window background content -->
                                    <ContentControl Grid.RowSpan="2" Content="{TemplateBinding BackgroundContent}" />

                                    <!-- window content -->
                                    <ContentPresenter Grid.Row="1" Margin="{TemplateBinding Padding}" />

                                    <!-- title bar -->
                                    <Grid Background="Transparent"><!-- This must be transparent. Simply setting no background will break movement of the window when clicking the topmost few pixels in full screen mode. -->
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.InputBindings>
                                            <MouseBinding MouseAction="RightClick" Command="{Binding Source={x:Static local:RxWindow.ShowSystemMenuUnderMouseCommand}}"/>
                                            <MouseBinding MouseAction="LeftClick" Command="{Binding Source={x:Static local:RxWindow.DragMoveCommand}}"/>
                                            <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Source={x:Static local:RxWindow.ToggleMaximizedCommand}}"/>
                                        </Grid.InputBindings>

                                        <Image Grid.Column="0" Height="18" Width="18" Margin="3" Source="{TemplateBinding Icon}" WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Image.InputBindings>
                                                <MouseBinding MouseAction="LeftClick" Command="{Binding Source={x:Static local:RxWindow.ShowSystemMenuUnderIconCommand}}"/>
                                                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}"/>
                                            </Image.InputBindings>
                                        </Image>

                                        <!-- title -->
                                        <TextBlock Grid.Column="1" Text="{TemplateBinding Title}" Margin="8,0" VerticalAlignment="Center" Style="{StaticResource ModernWindowTitle}"
                                                   DataContext="{TemplateBinding IsTitleVisible}"
                                                   Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}"/>

                                        <!-- logo (visible only when LogoData is not null) -->
                                        <Border Grid.Column="2" Background="{DynamicResource Accent}" Width="36" Height="36" Margin="8,0"
                                                DataContext="{TemplateBinding LogoData}"
                                                Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                                            <Path Data="{Binding}" Stretch="Fill" Fill="White" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>

                                        <!-- window system buttons-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                            <UserControl Name="MinimizeTitleBarButton" Style="{DynamicResource MinimizeTitleBarButton}"/>
                                            <UserControl Name="MaximizeTitleBarButton" Style="{DynamicResource MaximizeTitleBarButton}"/>
                                            <UserControl Name="RestoreTitleBarButton" Style="{DynamicResource RestoreTitleBarButton}"/>
                                            <UserControl Name="CloseTitleBarButton" Style="{DynamicResource CloseTitleBarButton}"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- resize grip -->
                                    <Grid Grid.Row="1" x:Name="ResizeGrip" Background="Transparent" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Bottom" WindowChrome.ResizeGripDirection="BottomRight">
                                        <Path Width="12" Height="12" Margin="1" 
                                              Stroke="{DynamicResource WindowText}"
                                              StrokeThickness="1"
                                              Stretch="None"
                                              Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3" />
                                    </Grid>
                                </Grid>
                            </AdornerDecorator>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderActive}" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="RestoreTitleBarButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="MaximizeTitleBarButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="LayoutRoot" Property="Margin" Value="7" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="RestoreTitleBarButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MaximizeTitleBarButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                                <Condition Property="WindowState" Value="Normal" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ButtonText">Gray</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonTextHover">White</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonTextDisabled">Gray</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBackground">#44061923</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBackgroundHover">#199DD2FF</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBackgroundPressed">#88061923</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBorder">#CC65787D</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBorderHover">#CC65787D</SolidColorBrush>
    <SolidColorBrush x:Key="ButtonBorderPressed">#CC65787D</SolidColorBrush>
    <CornerRadius x:Key="ButtonCornerRadius">3</CornerRadius>
    <Style TargetType="{x:Type Button}" >
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{StaticResource ButtonCornerRadius}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="Presenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Chrome" Value="{DynamicResource Accent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TopBarButtons" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}" >
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Height" Value="24" />
    </Style>

    <BitmapImage x:Key="FlagBatch" UriSource="Resources/FlagBatch.png"/>



</ResourceDictionary>